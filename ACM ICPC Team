using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
class Solution {

static void Main(string[] args)
        {
            string[] tokens_n = Console.ReadLine().Split(' ');
            int people = Convert.ToInt32(tokens_n[0]);
            int topics = Convert.ToInt32(tokens_n[1]);           
            string[] topicLine = new string[people];
            string[,] topic = new string[people, topics];
            for (int i = 0; i < people; i++)
            {
                topicLine[i] = Console.ReadLine();
                for (int j = 0; j < topicLine[i].Length; j++)
                {
                    topic[i, j] = topicLine[i][j].ToString();
                }
            }
            int[] result = getMaxTopicAndTeams(topic);           
            Console.WriteLine(result[0]);
            Console.WriteLine(result[1]);
            Console.ReadKey();
        }
        private static int[] getMaxTopicAndTeams(string[,] topic)
        {
            int[] resultArray = new int[2];
            int maxTopics = 0;
            int winningTeam = 0;
            for (int i = 0; i < topic.GetLength(0)-1; i++)
            {                
                for (int j = i+1; j < topic.GetLength(0); j++)
                {
                    int currentMaxTopic = 0;
                    for (int h=0;h< topic.GetLength(1);h++)
                    {
                        string x = topic[i, h].ToString();
                        string y = topic[ j, h].ToString();                      
                        if (x=="1"||y=="1")
                        {
                            currentMaxTopic++;
                        }
                    }
                    if (maxTopics < currentMaxTopic)
                    {
                        maxTopics = currentMaxTopic;
                        winningTeam = 1;
                    }
                    else if (maxTopics == currentMaxTopic)
                    {
                        winningTeam++;
                    }
                }                
            }
            resultArray[0] = maxTopics;
            resultArray[1] = winningTeam;
            return resultArray;          
        }
}
